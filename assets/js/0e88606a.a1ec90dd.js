"use strict";(self.webpackChunk_freshgum_typedi_docs=self.webpackChunk_freshgum_typedi_docs||[]).push([[356],{9613:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(9496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(t),d=o,f=l["".concat(c,".").concat(d)]||l[d]||m[d]||i;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[l]="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7043:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=t(1966),o=(t(9496),t(9613));const i={sidebar_position:1},a="Custom Containers",s={unversionedId:"guide/containers/custom-containers",id:"guide/containers/custom-containers",title:"Custom Containers",description:"In some scenarios, you may wish to change how containers work.",source:"@site/docs/guide/containers/custom-containers.md",sourceDirName:"guide/containers",slug:"/guide/containers/custom-containers",permalink:"/docs/guide/containers/custom-containers",draft:!1,editUrl:"https://github.com/freshgum-bubbles/typedi/docs/docs/guide/containers/custom-containers.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Containers",permalink:"/docs/guide/containers/introduction"},next:{title:"Creating Containers",permalink:"/docs/guide/containers/creating-containers"}},c={},u=[],p={toc:u},l="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(l,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"custom-containers"},"Custom Containers"),(0,o.kt)("p",null,"In some scenarios, you may wish to change how containers work.\nIn this case, ",(0,o.kt)("em",{parentName:"p"},"custom containers")," may be appropriate."),(0,o.kt)("p",null,"In TypeDI, each container is always an instance of ",(0,o.kt)("inlineCode",{parentName:"p"},"ContainerInstance"),".\nHowever, you can ",(0,o.kt)("em",{parentName:"p"},"extend")," this class with custom functionality, and\nthen register it as an ordinary container."),(0,o.kt)("p",null,"In practice, this looks like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { ContainerInstance, ContainerRegistry, ServiceIdentifier, ContainerIdentifier } from '@freshgum/typedi';\n\nexport class MyContainerInstance {\n  public constructor(id: ContainerIdentifier, parent?: ContainerInstance) {\n    super(id, parent);\n  }\n\n  // ...\n}\n\nconst newContainer = new MyContainerInstance('my-new-container');\nContainerRegistry.registerContainer(newContainer);\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Your custom container class will need a ",(0,o.kt)("inlineCode",{parentName:"p"},"public")," constructor as,\ncurrently, TypeDI's ",(0,o.kt)("inlineCode",{parentName:"p"},"ContainerInstance")," has a ",(0,o.kt)("inlineCode",{parentName:"p"},"protected")," constructor.")),(0,o.kt)("p",null,"Once your custom container has been registered, it functions as an ordinary\ncontainer. Calls to methods such as ",(0,o.kt)("inlineCode",{parentName:"p"},"ContainerInstance.of")," return the custom instance."))}m.isMDXComponent=!0}}]);