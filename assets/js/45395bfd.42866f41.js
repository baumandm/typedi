"use strict";(self.webpackChunk_freshgum_typedi_docs=self.webpackChunk_freshgum_typedi_docs||[]).push([[856],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(n),d=i,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||s;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:i,a[1]=o;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1019:(e,t,n)=>{n.d(t,{b:()=>i});var r=n(9751);function i(){return(0,r.Z)(...arguments)}},608:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(1966),i=n(9496),s=n(5347),a=n(1019);function o(e){let{repoPath:t,type:n,nodeID:o,...c}=e;const{siteConfig:l}=(0,a.b)(),p=t??l.customFields.github.repoPath,u=function(e,t){switch(e){case"issue":return`/issues/${t}`;case"pull-request":return`/pull/${t}`;case"discussion":return`/discussions/${t}`;default:throw new Error(`<GitHubRefLink />: Unexpected node type: ${e} with ID ${t}.`)}}(n,o);return i.createElement(s.Z,(0,r.Z)({to:`https://github.com/${p}${u}`},c),p,"#",o)}},1717:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=n(1966),i=(n(9496),n(9613));n(608);const s={sidebar_position:6},a="Transient Services",o={unversionedId:"guide/services/transient-services",id:"guide/services/transient-services",title:"Transient Services",description:"Normally, when you create a service, it's cached and any further calls to Container.get",source:"@site/docs/guide/services/transient-services.mdx",sourceDirName:"guide/services",slug:"/guide/services/transient-services",permalink:"/docs/guide/services/transient-services",draft:!1,editUrl:"https://github.com/freshgum-bubbles/typedi/docs/docs/guide/services/transient-services.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Singletons",permalink:"/docs/guide/services/singletons"},next:{title:"Usage in JavaScript",permalink:"/docs/guide/services/usage-in-javascript"}},c={},l=[{value:"Demo",id:"demo",level:2},{value:"Transient Services as Dependencies",id:"transient-services-as-dependencies",level:2},{value:"Performance",id:"performance",level:2},{value:"<code>TransientRef</code>",id:"transientref",level:2}],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"transient-services"},"Transient Services"),(0,i.kt)("p",null,"Normally, when you create a service, it's cached and any further calls to ",(0,i.kt)("inlineCode",{parentName:"p"},"Container.get"),"\n(or when the service is used as a dependency) result in the same instance of the service."),(0,i.kt)("p",null,"In some cases, that behaviour may actually be ",(0,i.kt)("em",{parentName:"p"},"undesirable"),". For this use-case, TypeDI\nprovides ",(0,i.kt)("em",{parentName:"p"},"transient services"),", which are re-instantiated every time they're requested."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"If your service performs complicated calculations, or emits side-effects (e.g. database connections),\nyou may find that the performance of your application quickly deteriorates."),(0,i.kt)("p",{parentName:"admonition"},'To fix this, you can "hoist" the logic outside of your transient service.\nRead more about this in ',(0,i.kt)("a",{parentName:"p",href:"#performance"},"the Performance section"),".")),(0,i.kt)("h2",{id:"demo"},"Demo"),(0,i.kt)("p",null,"To demonstrate how transient services, let's create a simple example: a performance timing API.\nThe timing API should correspond with one set of marks alongside a final measurement."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/timer.service.ts"',title:'"src/timer.service.ts"'},"import { Service } from '@freshgum/typedi';\n\n@Service({ transient: true }, [ ])\nexport class TimerService {\n    private name: string | null = null;\n\n    start (name: string) {\n        this.name = name;\n        performance.mark(`${name}-start`);\n    }\n\n    end () {\n        const endName = `${this.name}-end`;\n        performance.mark(endName);\n        performance.measure(this.name, `${this.name}-start`, endName);\n    }\n}\n")),(0,i.kt)("p",null,"Now, we'll make use of this timing API in our page service,\na fictional service which is responsible for rendering pages."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/page.service.ts"',title:'"src/page.service.ts"'},"import { Service, HostContainer } from '@freshgum/typedi';\nimport { TransientRef } from '@freshgum/typedi/contrib/transient-ref';\nimport { TimerService } from './timer.service';\n\n@Service([\n    TransientRef(TimerService)\n])\nexport class PageService {\n    constructor (private timerServiceRef: TransientRef<TimerService>) { }\n\n    async renderPage () {\n        const timer = this.timerServiceRef.create();\n        timer.start('page-render');\n        // Perform page rendering logic...\n        timer.end();\n    }\n}\n")),(0,i.kt)("p",null,"Now, when a page is rendered, we'll have new performance entries to upload to a central diagnostics server."),(0,i.kt)("h2",{id:"transient-services-as-dependencies"},"Transient Services as Dependencies"),(0,i.kt)("p",null,"When you use a transient service as a dependency, the same instance of the service will\nbe used over the lifetime over the consuming service.  If this isn't the desired behaviour,\nyou would be better served by the ",(0,i.kt)("inlineCode",{parentName:"p"},"HostContainer()")," API, which allows you to get an instance\nof the container the service is running under."),(0,i.kt)("p",null,"Then, you can replace references to the transient service with calls to ",(0,i.kt)("inlineCode",{parentName:"p"},"Container.get"),"."),(0,i.kt)("p",null,"In the example above, we did just that.  This allowed us to get a new instance of ",(0,i.kt)("inlineCode",{parentName:"p"},"TimerService"),"\nfor each page that was rendered in the app."),(0,i.kt)("h2",{id:"performance"},"Performance"),(0,i.kt)("p",null,"If your transient service relies on a great number of other transient services, computes expensive\ncomputations, or creates side-effects which may affect the application, you may find that transient\nservices affect your application's performance."),(0,i.kt)("p",null,"For this reason, it's typically recommended to use static services or ",(0,i.kt)("a",{parentName:"p",href:"./singletons"},"singletons")," if\nyour workflow doesn't explicitly require services to be transient."),(0,i.kt)("p",null,"If you would still prefer transient scenarios in this case, consider ",(0,i.kt)("strong",{parentName:"p"},"hoisting")," calculations\nand side-effects out of ",(0,i.kt)("em",{parentName:"p"},"individual")," transient services, replacing them with references to a\nstatic / singleton service."),(0,i.kt)("h2",{id:"transientref"},(0,i.kt)("inlineCode",{parentName:"h2"},"TransientRef")),(0,i.kt)("p",null,"In v0.5.0, a new function was added to make the management of transient services easier.\nThis should replace any prior usages of ",(0,i.kt)("a",{parentName:"p",href:"/docs/guide/services/host-container"},(0,i.kt)("inlineCode",{parentName:"a"},"HostContainer")),"."))}m.isMDXComponent=!0}}]);