parser: '@typescript-eslint/parser'
plugins:
  - '@typescript-eslint'
parserOptions:
  ecmaVersion: 2018
  sourceType: module
  project: 
    - ./tsconfig.json
    - ./tsconfig.spec.json
extends:
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:@typescript-eslint/recommended-requiring-type-checking'
  - 'plugin:jest/recommended'
  - 'prettier'
rules:
  '@typescript-eslint/explicit-member-accessibility': off
  '@typescript-eslint/no-angle-bracket-type-assertion': off
  '@typescript-eslint/no-parameter-properties': off
  '@typescript-eslint/explicit-function-return-type': off
  '@typescript-eslint/member-delimiter-style': off
  '@typescript-eslint/no-inferrable-types': off
  '@typescript-eslint/no-explicit-any': off
  '@typescript-eslint/require-await': off
  '@typescript-eslint/no-unused-vars':
    - 'error'
    - args: 'none'
  'no-console':
    - 'error'
  'no-alert':
    - 'error'
  'no-eval':
    - 'error'
  'no-throw-literal':
    - 'error'

  # If @ts-ignore is being used, it's probably for a good reason.
  # In one part of the code-base, it's used due to a bug in the TypeScript compiler.
  # Therefore, it's turned off here.
  '@typescript-eslint/ban-ts-comment':
    - 'off'

  '@typescript-eslint/ban-types': off 
  '@typescript-eslint/no-unsafe-return': off
  '@typescript-eslint/no-unsafe-assignment': off
  '@typescript-eslint/no-unsafe-call': off
  '@typescript-eslint/no-unsafe-member-access': off
  '@typescript-eslint/explicit-module-boundary-types': off